<?xml version="1.0"?>

<polUni>
    <infraInfra>
        <vnsMDev vendor="nginx" model="nginx" version="0.0.1">

            <!-- - - - - - - - - - - - - - - - - - - - - -->
            <!--              GENERIC PART               -->
            <!-- - - - - - - - - - - - - - - - - - - - - -->

            <!-- Script -->
            <!-- TODO: complete versionExpr -->
            <vnsDevScript name="nginx"
                          ctrlrVersion="1.0"
                          minorversion="1"
                          versionExpr="0.0.1"
                          packageName="DeviceScript.py"/>

            <vnsDevProf name="nginx" type="VIRTUAL">
                <vnsDevInt name="eth0"/>
                <vnsDevInt name="eth1"/>
                <vnsDevInt name="eth2"/>
                <vnsDevInt name="eth3"/>
                <vnsDevInt name="eth4"/>
                <vnsDevInt name="eth5"/>
            </vnsDevProf>

            <!-- Credentials -->
            <vnsMCred name="username" key="username"/>
            <vnsMCredSecret name="password" key="password"/>

            <!-- Interfaces -->
            <vnsMIfLbl name="external" shortName="ext"/>
            <vnsMIfLbl name="internal" shortName="int"/>
            <vnsMIfLbl name="management" shortName="mgmt"/>


            <!-- Parameter validation -->

            <!-- TODO : Test regex more in depth! -->
            <!-- From 1.0.0.1 to 223.255.255.254, exception 127.x.x.x -->
            <vnsComparison name="isIPv4Addr" cmp="match" value="^(?!127)(?!1\.0\.0\.0)(?!223\.255\.255\.255)(2[0-2][0-3]|[1]?[1-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$"/>
            <!--<vnsComparison name="ipv4Addr" cmp="match" value="^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])(\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])){3}$"/>-->

            <vnsComposite comp="or" name="isLBAlgo">
                <vnsComparison cmp="eq" name="round-robin" value="round-robin"/>
                <vnsComparison cmp="eq" name="least-con" value="least-con"/>
                <vnsComparison cmp="eq" name="least-time" value="least-time"/>
                <vnsComparison cmp="eq" name="ip_hash" value="ip_hash"/>
                <vnsComparison cmp="eq" name="hash" value="hash"/>
            </vnsComposite>

            <vnsComposite comp="or" name="isBoolean">
                <vnsComparison cmp="match" name="true" value="true"/>
                <vnsComparison cmp="match" name="false" value="false"/>
            </vnsComposite>

            <vnsComposite comp="or" name="isModifier">
                <vnsComparison cmp="eq" name="eq" value="eq"/> <!-- Exact match -->
                <vnsComparison cmp="eq" name="CIregex" value="CIregex"/> <!-- Case insensitive regex -->
                <vnsComparison cmp="eq" name="CSregex" value="CSregex"/> <!-- Case sensitive regex -->
                <vnsComparison cmp="eq" name="not_check" value="not_check"/> <!-- Regex is not checked -->
            </vnsComposite>


            <!-- - - - - - - - - - - - - - - - - - - - - -->
            <!--  CLUSTER AND DEVICE CONFIGURATION PART  -->
            <!-- - - - - - - - - - - - - - - - - - - - - -->

            <vnsClusterCfg name="ClusterConfig">
                <vnsDevCfg name="DeviceConfig">

                </vnsDevCfg>
            </vnsClusterCfg>



            <!-- - - - - - - - - - - - - - - - - - - - - -->
            <!--             FUNCTIONAL PART             -->
            <!-- - - - - - - - - - - - - - - - - - - - - -->

            <!-- Global functional device configuration -->
            <vnsMDevCfg name="DeviceConfig">

                <!-- Server pool (backend) -->
                <vnsMFolder key="upstream"
                            description="Configure the backend (upstream)"
                            dispLabel="Backend"
                            cardinality="n">
                            <!--scopedBy="epg"-->

                    <vnsMParam key="upstreamName" description="Name of the backend" mandatory="true" dType="str" dispLabel="Name"/>

                    <vnsMParam key="lbalgo" description="Load-balancing algorithm" mandatory="false" dType="str" dispLabel="Load-balancing algorithm" validation="isLBAlgo"/>

                    <vnsMFolder key="server"
                                description="Server of a backend"
                                dispLabel="Server"
                                cardinality="n">
                                <!--scopedBy="epg"-->
                        <!-- Connectivity -->
                        <vnsMParam key="ip" description="Address of the server" mandatory="true" dType="str" dispLabel="Address"/>
                        <vnsMParam key="port" description="Port of the server" mandatory="false" dType="str" dispLabel="Port"/>

                        <!-- Parameters -->
                        <vnsMParam key="weight" description="Weight given to the server" mandatory="false" dType="str" dispLabel="Weight"/>
                        <vnsMParam key="max_fails" description="Maximum number of unsuccessful attempts during fail_timeout" mandatory="false" dType="str" dispLabel="max_fails"/>
                        <vnsMParam key="fail_timeout" description="Consider the server unavailable if max_fails is reached during this time" mandatory="false" dType="str" dispLabel="fail_timeout"/>
                        <vnsMParam key="backup" description="Mark the server as a backup" mandatory="false" dType="str" dispLabel="backup" validation="isBoolean"/>
                        <!-- TODO : Continue the list of parameters : http://nginx.org/en/docs/http/ngx_http_upstream_module.html#server -->

                    </vnsMFolder>
                </vnsMFolder>

                <!-- Frontend server Load Balancer -->
                <vnsMFolder key="frontendServer"
                            description="Configure the frontend server"
                            dispLabel="Frontend"
                            cardinality="n">
                            <!--scopedBy="epg"-->

                    <vnsMRel key="listen" dispLabel="Listen" cardinality="1" description="Listen">
                        <vnsRsTarget tDn="uni/infra/mDev-nginx-nginx-0.0.1/mDevCfg/mFolder-listen"/>
                    </vnsMRel>

                    <vnsMRel key="location" dispLabel="Location" cardinality="1" description="Location">
                        <vnsRsTarget tDn="uni/infra/mDev-nginx-nginx-0.0.1/mDevCfg/mFolder-location"/>
                    </vnsMRel>

                </vnsMFolder>

                <!-- Listen directive -->
                <!-- See http://nginx.org/en/docs/http/ngx_http_core_module.html#listen -->
                <vnsMFolder key="listen"
                            description="Listen directive"
                            dispLabel="Listen"
                            cardinality="1">
                    <vnsMParam key="address" description="Address" mandatory="false" dType="str" dispLabel="Address"/> <!-- Not mandatory, default : *, example: *:80 -->
                    <vnsMParam key="port" description="Port" mandatory="false" dType="str" dispLabel="Port"/>
                    <vnsMParam key="isDefault" description="Is the default server" mandatory="false" dType="str" dispLabel="Default" validation="isBoolean"/>


                </vnsMFolder>

                <!-- Location -->
                <!-- "location [= | ~ | ~* | $~] uri {...}", see http://nginx.org/en/docs/http/ngx_http_core_module.html#location -->
                <vnsMFolder key="location"
                            description="Location"
                            dispLabel="Location"
                            cardinality="1">
                    <vnsMParam key="uri" description="URI" mandatory="true" dType="str" dispLabel="URI"/>
                    <vnsMParam key="modifier" description="Modifier" mandatory="false" dType="str" dispLabel="Modifier" validation="isModifier"/>

                    <vnsMParam key="proxy_pass" description="proxy_pass directive, name of the backend" mandatory="true" dType="str" dispLabel="proxy_pass"/>

                </vnsMFolder>

            </vnsMDevCfg>

            <!-- Group configuration -->
            <!--<vnsGrpCfg>-->

            <!--</vnsGrpCfg>-->



            <!-- Function configuration : Load balancer -->
            <vnsMFunc name="Load_balancer">

                <!-- Image -->
                <vnsMImage name="cisco.gif"/>

                <!-- Connector Objects -->
                <vnsMConn name="internal" encType="vlan" dir="output">
                    <vnsRsInterface tDn="uni/infra/mDev-nginx-nginx-0.0.1/mIfLbl-internal"/>
                </vnsMConn>

                <vnsMConn name="external" encType="vlan" dir="input">
                    <vnsRsInterface tDn="uni/infra/mDev-nginx-nginx-0.0.1/mIfLbl-external"/>
                </vnsMConn>

                <!-- Features -->
                <!--<vnsMFeature name="Server" dispOrder="0"/>-->

                <!-- Folders -->
                <vnsMFolder key="upstreamCfg"
                            description="backend"
                            dispLabel="backend"
                            cardinality="n">
                    <vnsMRel dispLabel="Select backend" key="upstreamRel">
                        <vnsRsTarget tDn="uni/infra/mDev-nginx-nginx-0.0.1/mDevCfg/mFolder-upstream"/>
                    </vnsMRel>
                </vnsMFolder>

                <vnsMFolder key="frontendServerCfg"
                            description="Front-end server"
                            dispLabel="Front-end server">
                    <vnsMRel dispLabel="Select front-end server" key="frontendServerRel">
                        <vnsRsTarget tDn="uni/infra/mDev-nginx-nginx-0.0.1/mDevCfg/mFolder-frontendServer"/>
                    </vnsMRel>
                </vnsMFolder>


                <!-- TODO -->


            </vnsMFunc>




        </vnsMDev>
    </infraInfra>
</polUni>
